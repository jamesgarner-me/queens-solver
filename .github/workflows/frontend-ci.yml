name: Frontend CI/CD

on:
    push:
        branches: [main]
        paths:
            - "frontend/**"
    pull_request:
        branches: [main]
        paths:
            - "frontend/**"
    workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: frontend

        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: frontend/package-lock.json

            - name: Clean install
              run: |
                  rm -rf node_modules package-lock.json
                  npm install
                  npm install @rollup/rollup-linux-x64-gnu

            - name: Run tests
              run: npm test

    deploy:
        needs: test
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: frontend

        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: frontend/package-lock.json

            - name: Clean install
              run: |
                  rm -rf node_modules package-lock.json
                  npm install
                  npm install @rollup/rollup-linux-x64-gnu

            - name: Build
              run: npm run build

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Deploy to S3
              run: |
                  aws s3 sync dist/ s3://${{ secrets.S3_BUCKET_NAME }} --delete

            - name: Invalidate CloudFront
              run: |
                  aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
